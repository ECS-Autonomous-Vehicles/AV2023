<launch>
    <!-- 
            ________   ________   ________          __         _______   ________
           / ______/  / ______/  / ______/         / /        / __   /  / ____  /
          / /_____   / /        / /_____          / /        / /__/ /  / /___/ /
         / ______/  / /        /___    /         / /        / ___  /  / ____  /
        / /_____   / /_____   _____/  /   __    / /_____   / /  / /  / /___/ /
       /_______/  /_______/  /_______/   /__/  /_______/  /_/  /_/  /_______/  
        ==================================================================
        [AUTONOMOUS CAR Main entry launch file] 
        ==================================================================
        AV-ECS (c) 2023
    -->

    <!-- Transformation Configuration -->
    <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0 0 0.2 0 0 0 base_link laser 30" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_to_imu" args="0 0 0.1 0 0 0 base_link imu 30" />
    <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.05 0 0 0 base_footprint base_link 30" />

    <!-- RP LIDAR  -->
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" respawn="true" output="screen">
  	<param name="serial_port"         type="string" value="/dev/ttyUSB0"/>  
  	<param name="serial_baudrate"     type="int"    value="256000"/><!--A3 -->
  	<param name="frame_id"            type="string" value="laser"/>
  	<param name="inverted"            type="bool"   value="false"/>
  	<param name="angle_compensate"    type="bool"   value="true"/>
  	<param name="scan_mode"           type="string" value="Sensitivity"/>
    </node>

    <!-- IMU  -->
    <remap from="imu/data" to="imu_data" /> 
    <node name="imu_node" pkg="auto_car" type="imu_node.py" respawn="true" respawn_delay="2"/>

    <!-- Odom Publisher -->
    <remap from="odom_data_quat" to= "odom"/>
    <node name="ekf_odom_pub" pkg="auto_car" type="ekf_odom_pub"/>
    <node name="rviz_click_to_2d" pkg="auto_car" type="rviz_click_to_2d"/>

    <!-- Extended Kalman Filter -->
    <!-- <node pkg="robot_localization" type="ekf_localization_node" name="ekf_se" clear_params="true">
        <rosparam command="load" file="$(find auto_car)/config/ekf_params.yaml" />
    </node> -->

    <!-- <node pkg="localization_data_pub" type="ekf_odom_pub" name="ekf_odom_pub"> -->
    <!-- </node> -->

    <node pkg="robot_pose_ekf" type="robot_pose_ekf" name="robot_pose_ekf">
        <param name="output_frame" value="odom"/>
        <param name="base_footprint_frame" value="base_footprint"/>
        <param name="freq" value="30.0"/>
        <param name="sensor_timeout" value="1.0"/>
        <param name="odom_used" value="true"/>
        <param name="imu_used" value="true"/>
        <param name="vo_used" value="false"/>
        <param name="gps_used" value="false"/>
        <param name="debug" value="false"/>
        <param name="self_diagnose" value="false"/>
    </node> 


    <!-- Map Server -->
	<arg name="map_file" default="$(find auto_car)/maps/map.yaml"/>
    <node name="map_server" pkg="map_server" type="map_server" args="$(arg map_file)" output="screen">
        <param name="frame_id" value="map"/>
    </node>

    <!-- AMCL -->
    <node pkg="amcl" type="amcl" name="amcl" output="screen">
	<rosparam file="$(find auto_car)/config/amcl_params.yaml" command="load" />
		<param name="initial_pose_x"            value="0"/>
		<param name="initial_pose_y"            value="0"/>
		<param name="initial_pose_a"            value="0"/>
    </node> 

    <!-- NAVIGATION -->
    <!-- <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
      <rosparam file="$(find auto_car)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
      <rosparam file="$(find auto_car)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />
      <rosparam file="$(find auto_car)/config/local_costmap_params.yaml" command="load" />
      <rosparam file="$(find auto_car)/config/global_costmap_params.yaml" command="load" /> 
      <rosparam file="$(find auto_car)/config/global_planner_params.yaml" command="load" />
      <rosparam file="$(find auto_car)/config/local_planner_params.yaml" command="load" />

		<param name="base_global_planner" value="global_planner/GlobalPlanner" />
		<param name="planner_frequency" value="1.0" />
		<param name="planner_patience" value="5.0" />

		<param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS" />
		<param name="controller_frequency" value="5.0" />
		<param name="controller_patience" value="15.0" />

                <param name="clearing_rotation_allowed" value="false" />
    </node> -->

    <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
        <rosparam file="$(find auto_car)/config/costmap_common_params.yaml" command="load" ns="global_costmap" /> 
        <rosparam file="$(find auto_car)/config/costmap_common_params.yaml" command="load" ns="local_costmap" />

        <!-- Global Planner -->
        <param name="base_global_planner" value="global_planner/GlobalPlanner" />
        <param name="planner_frequency" value="1.0" />
        <param name="planner_patience" value="5.0" />
        <rosparam file="$(find av_atras)/config/global_costmap_params.yaml" command="load" />    
        <rosparam file="$(find av_atras)/config/global_planner_params.yaml" command="load" />
        
        <!-- Local Planner -->
        <param name="base_local_planner" value="teb_local_planner/TebLocalPlannerROS"/>
        <rosparam file="$(find av_atras)/config/teb_local_costmap_params.yaml" command="load"/>
        <rosparam file="$(find av_atras)/config/teb_local_planner_params.yaml" command="load"/>
        <!-- <param name="controller_frequency" value="10.0"/> -->
        <param name="clearing_rotation_allowed" value="false"/>
    </node>
    <remap from="/cmd_vel" to="/move_base/cmd_vel"/> 
        
    <!-- Controller Node -->
    <node name="mpc_node" pkg="auto_car" type="mpc_node.py" output="screen" /> 

    <!-- Spawn Hardware Interface-->
    <node name="car_hardware_interface" pkg="auto_car" type="car_hardware_interface.py" output="screen"/> 

    <!-- Controller -->
        <!-- L1 --> <!-- speed of car m/s -->
        <!-- ESC --> <!-- pwm for motor constant speed, 1480: stop, 1440: ~0.5m/s, 1430: ~1.5m/s --> 
        <!-- Servo --> <!-- the middle pos of servo, for tt02: 87, for hsp: ? -->
        <!-- for tt02: >0, for hsp: <0 -->	
    <!-- <node pkg="auto_car" type="controller" respawn="false" name="L1_controller_v2" output="screen">       
        <param name="Vcmd" value="2.0" />        
        <param name="baseSpeed" value="1425"/>
        <param name="baseAngle" value="90.0"/>
        <param name="AngleGain" value="-3.5"/> 	
    </node> -->

    <!-- STM32F407 --> 
    <node name="rosserial_python" pkg="rosserial_python" type="serial_node.py">
        <param name="port" value="/dev/ttyACM0" />
        <param name="baud" value="57600" />
    </node>

    <!--  RVIZ  -->
    <node pkg="rviz" type="rviz" args="-d $(find auto_car)/rviz/planner.rviz" name="rviz">
    </node> 



</launch>
